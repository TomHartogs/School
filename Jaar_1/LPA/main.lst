   1               		.file	"main.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               	.global	ReadKeys
  12               	ReadKeys:
  13               	.LFB9:
  14               		.file 1 "main.c"
   1:main.c        **** /*****************************************************************************/
   2:main.c        **** // Includes:
   3:main.c        **** #include "RP6ControlLib.h"
   4:main.c        **** #include <stdlib.h>
   5:main.c        **** 
   6:main.c        **** //Own includes
   7:main.c        **** #include "action_enum.h"
   8:main.c        **** #include "initialize.h"
   9:main.c        **** #include "message.h"
  10:main.c        **** #include "perform_tasks.h"   
  11:main.c        **** 
  12:main.c        **** /*****************************************************************************/
  13:main.c        **** // Main function - The program starts here:
  14:main.c        **** 
  15:main.c        **** MESSAGE _message;
  16:main.c        **** 
  17:main.c        **** int main(void)
  18:main.c        **** {
  19:main.c        **** 	Initialize();														//Initializes all standard Rp6 functions
  20:main.c        **** 	
  21:main.c        **** 	clearReceptionBuffer();												//Clears the buffer for clean receiving
  22:main.c        **** 
  23:main.c        **** 	while(true) 														//Start loop
  24:main.c        **** 	{
  25:main.c        **** 		ReadKeys();
  26:main.c        **** 		if(Read(&_message))												//Check if a message has been read
  27:main.c        **** 		{				
  28:main.c        **** 			performTasks(&_message);								    //Perform action thats set in _message
  29:main.c        **** 			
  30:main.c        **** 			cleanMessage(&_message);									//Clean the message for the next run
  31:main.c        **** 		}
  32:main.c        **** 		maintainHeight();
  33:main.c        **** 		showSimParams();
  34:main.c        **** 	}
  35:main.c        **** 	return 0;
  36:main.c        **** }
  37:main.c        **** 
  38:main.c        **** void ReadKeys()
  39:main.c        **** {
  15               		.loc 1 39 0
  16               		.cfi_startproc
  17               	/* prologue: function */
  18               	/* frame size = 0 */
  19               	/* stack size = 0 */
  20               	.L__stack_usage = 0
  40:main.c        **** 	uint8_t key = getPressedKeyNumber(); 
  21               		.loc 1 40 0
  22 0000 0E94 0000 		call getPressedKeyNumber
  23               	.LVL0:
  41:main.c        **** 	if(key) // If a key is pressed... (key != 0)
  24               		.loc 1 41 0
  25 0004 8823      		tst r24
  26 0006 01F0      		breq .L1
  27               	.LBB2:
  42:main.c        **** 	{
  43:main.c        **** 		setHeightRp6((key - 1) * 100);
  28               		.loc 1 43 0
  29 0008 90E0      		ldi r25,0
  30 000a 0197      		sbiw r24,1
  31               	.LVL1:
  32 000c 24E6      		ldi r18,lo8(100)
  33 000e AC01      		movw r20,r24
  34 0010 249F      		mul r18,r20
  35 0012 C001      		movw r24,r0
  36 0014 259F      		mul r18,r21
  37 0016 900D      		add r25,r0
  38 0018 1124      		clr __zero_reg__
  39 001a 0E94 0000 		call setHeightRp6
  40               	.LVL2:
  41               	.L3:
  44:main.c        **** 		while(getPressedKeyNumber())
  42               		.loc 1 44 0 discriminator 1
  43 001e 0E94 0000 		call getPressedKeyNumber
  44               	.LVL3:
  45 0022 8823      		tst r24
  46 0024 01F0      		breq .L1
  47               	.LBB3:
  45:main.c        **** 		{
  46:main.c        **** 			showSimParams(); 
  48               		.loc 1 46 0
  49 0026 0E94 0000 		call showSimParams
  50               	.LVL4:
  51 002a 00C0      		rjmp .L3
  52               	.L1:
  53 002c 0895      		ret
  54               	.LBE3:
  55               	.LBE2:
  56               		.cfi_endproc
  57               	.LFE9:
  59               		.section	.text.startup,"ax",@progbits
  60               	.global	main
  62               	main:
  63               	.LFB8:
  18:main.c        **** {
  64               		.loc 1 18 0
  65               		.cfi_startproc
  66               	/* prologue: function */
  67               	/* frame size = 0 */
  68               	/* stack size = 0 */
  69               	.L__stack_usage = 0
  19:main.c        **** 	Initialize();														//Initializes all standard Rp6 functions
  70               		.loc 1 19 0
  71 0000 0E94 0000 		call Initialize
  72               	.LVL5:
  21:main.c        **** 	clearReceptionBuffer();												//Clears the buffer for clean receiving
  73               		.loc 1 21 0
  74 0004 0E94 0000 		call clearReceptionBuffer
  75               	.LVL6:
  76               	.L9:
  77               	.LBB4:
  25:main.c        **** 		ReadKeys();
  78               		.loc 1 25 0
  79 0008 0E94 0000 		call ReadKeys
  80               	.LVL7:
  26:main.c        **** 		if(Read(&_message))												//Check if a message has been read
  81               		.loc 1 26 0
  82 000c 80E0      		ldi r24,lo8(_message)
  83 000e 90E0      		ldi r25,hi8(_message)
  84 0010 0E94 0000 		call Read
  85               	.LVL8:
  86 0014 892B      		or r24,r25
  87 0016 01F0      		breq .L8
  28:main.c        **** 			performTasks(&_message);								    //Perform action thats set in _message
  88               		.loc 1 28 0
  89 0018 80E0      		ldi r24,lo8(_message)
  90 001a 90E0      		ldi r25,hi8(_message)
  91 001c 0E94 0000 		call performTasks
  92               	.LVL9:
  30:main.c        **** 			cleanMessage(&_message);									//Clean the message for the next run
  93               		.loc 1 30 0
  94 0020 80E0      		ldi r24,lo8(_message)
  95 0022 90E0      		ldi r25,hi8(_message)
  96 0024 0E94 0000 		call cleanMessage
  97               	.LVL10:
  98               	.L8:
  32:main.c        **** 		maintainHeight();
  99               		.loc 1 32 0
 100 0028 0E94 0000 		call maintainHeight
 101               	.LVL11:
  33:main.c        **** 		showSimParams();
 102               		.loc 1 33 0
 103 002c 0E94 0000 		call showSimParams
 104               	.LVL12:
 105               	.LBE4:
  34:main.c        **** 	}
 106               		.loc 1 34 0
 107 0030 00C0      		rjmp .L9
 108               		.cfi_endproc
 109               	.LFE8:
 111               		.comm	_message,3,1
 112               		.comm	timer,2,1
 113               		.text
 114               	.Letext0:
 115               		.file 2 "/usr/lib/avr/include/stdint.h"
 116               		.file 3 "message.h"
 117               		.file 4 "./RP6Lib/RP6control/RP6ControlLib.h"
 118               		.file 5 "perform_tasks.h"
 119               		.file 6 "initialize.h"
 120               		.file 7 "./RP6Lib/RP6common/RP6uart.h"
DEFINED SYMBOLS
                            *ABS*:00000000 main.c
     /tmp/ccP2yXhF.s:2      *ABS*:0000003e __SP_H__
     /tmp/ccP2yXhF.s:3      *ABS*:0000003d __SP_L__
     /tmp/ccP2yXhF.s:4      *ABS*:0000003f __SREG__
     /tmp/ccP2yXhF.s:5      *ABS*:00000000 __tmp_reg__
     /tmp/ccP2yXhF.s:6      *ABS*:00000001 __zero_reg__
     /tmp/ccP2yXhF.s:12     .text:00000000 ReadKeys
     /tmp/ccP2yXhF.s:62     .text.startup:00000000 main
                            *COM*:00000003 _message
                            *COM*:00000002 timer

UNDEFINED SYMBOLS
getPressedKeyNumber
setHeightRp6
showSimParams
Initialize
clearReceptionBuffer
Read
performTasks
cleanMessage
maintainHeight
__do_clear_bss
